# yaml file for the conus404 dataset

#---------------------
# CONUS404 data is (assumed to be) hourly data stored in daily netcdf
# files organized by year.  Each file contains 24 timesteps and all
# variables of the appropriate dimensionality.  Data has been
# compressed with lossy compression, and is chunked so that each file
# is a single chunk (i.e., 1 chunk = all space, 24 timesteps).
# 
# Naming convention: $path/YYYY/conus404.Nd.YYYY-MM-DD.nc
#
# data is normalized (using functions in transforms.py) in the
# dataloader in applications/train.py; no need for users to normalize
# them by hand.
#---------------------

# the location to save your workspace, it will have
# (1) pbs script, (2) a copy of this config, (3) model weights, (4) training_log.csv
# if save_loc does not exist, it will be created automatically

save_loc: '/glade/work/$USER/CREDIT_runs/c404/'
seed: 2222  # RNG seed


data:

    # upper-air / 3D variables.  These variables are prognostic state
    # variables: the output value predicted for time T is used as an
    # input value for predicting time T+1.

    # NOTE that U and V are on staggered grids that are 1 larger in
    # the x- and y- dimensions (respectively) than the other
    # variables; the south and west indexes have been trimmed to match
    # the dimensionality of the non-staggered grids.
    
    variables: [
    'P',        # total pressure (dataset uses hybrid sigma coordinates)
    'QVAPOR',   # water vapor mixing ratio
    'TK',	# air temperature
    'U',	# U-component of wind *with respect to model grid*
    'V',	# V-component of wind *with respect to model grid*
    'Z',	# geopotential height
    ]
    save_loc: '/glade/derecho/scratch/mcginnis/conus404/data/*/conus404.3d.*nc'


    # surface / 2D variables.  Most of these are also prognostic, but
    # a few (precipitation in particular) are output-only diagnostic
    # variables that are not recycled as inputs.  
    
    surface_variables: [
    'PSFC',  	   # surface pressure
    'Q2',    	   # water vapor mizing ratio at 2 meters
    # 'SNOW',    	   # snow water equivalent
    'SWDNB',  	   # instantaneous downwelling shortwave flux at bottom
    'T2',     	   # temperature at 2 meters
    'TD2',  	   # 2-m dewpoint temperature
    'U10',  	   # u-wind at 10 meters
    'V10',         # v-wind at 10 meters
    'totalVap',    # column-integrated water vapor content 
    ]
    save_loc_surface: '/glade/derecho/scratch/mcginnis/conus404/data/*/conus404.2d.*nc'


    # boundary condition / dynamic forcing variables from -- need to also read in TOA incoming
    # solar from /glade/derecho/scratch/dgagne/credit_solar_6h_0.25deg/*.nc'

    dynamic_forcing_variables: [
    #  FILL IN
    ]
    save_loc_dynamic_forcing: '/glade/derecho/scratch/mcginnis/conus404/era5/*.nc' # FILL IN


    # diagnostic variables
    diagnostic_variables: [
    'PREC_ACC_NC', # precipitation (over previous hour)
    ]
    save_loc_diagnostic: '/glade/derecho/scratch/mcginnis/conus404/data/*/conus404.2d.*nc'


    # forcing variables that don't come from ERA5
    forcing_variables: [
      'tsi',
      'COSZEN',      # cosine of solar zenith angle - from C404 2D [omit?]
    ]
    save_loc_forcing: '/glade/derecho/scratch/mcginnis/conus404/solar/*.nc'  ## FILL IN

    # static variables - need to be PRE-NORMALIZED by user (i.e., all
    # values in file are mapped to [0,1] or to mean=0, stdev=1)

    static_variables: [
    'COSALPHA', # Local cosine of map rotation
    'E',        # Coriolis cosine latitude term
    'F',        # Coriolis sine latitude term
    'HGT',      # terrain height
    'LANDMASK', # land mask
    'VAR',      # orographic variance
    'VAR_SSO',  # variance of subgrid-scale orography
    'XLAT',     # latitude     # ? omit to prevent cheating?
    'XLONG',    # longitude    # ? omit to prevent cheating?
    ]
    save_loc_static: '/glade/derecho/scratch/mcginnis/conus404/constants/ ???'  ## FILL IN

    ## HERE

    # z-score files, they must be zarr or nc with (level,) coords
    # they MUST include all the
    #     'variables', 'surface_variables', 'dynamic_forcing_variables', 'diagnostic_variables' above
    mean_path: '/glade/campaign/cisl/aiml/ksha/CREDIT/mean_6h_0.25deg.nc'  ## FILL IN
    std_path: '/glade/campaign/cisl/aiml/ksha/CREDIT/std_6h_0.25deg.nc'	   ## FILL IN

    scaler_type: "std"
    zarrpath: '/glade/campaign/ral/risc/DATA/conus404/zarr'
    save_loc: './'
    mean_path: '/glade/derecho/scratch/mcginnis/conus404/stats/all.avg.C404.nc'
    std_path: '/glade/derecho/scratch/mcginnis/conus404/stats/all.std.C404.nc'
    history_len: 2 
    forecast_len: 1
    valid_history_len: 2
    valid_forecast_len: 1
    time_step: 1
    start: "1979-10-01"
    finish: "2012-09-30"

model:
    type: "unet404"
    image_height: 512
    image_width: 512
    frames: 3
    architecture:
        name: "unet"
        encoder_name: "resnet34"
        encoder_weights: "imagenet"
    
trainer:
    mode: none # none, ddp, fsdp
    train_batch_size: 4
    valid_batch_size: 4
    batches_per_epoch: 1000 # Set to 0 to use len(dataloader)
    valid_batches_per_epoch: 100
    learning_rate: 1.0e-04
    weight_decay: 1.0e-05
    start_epoch: 0
    epochs: 4  # 30 years hourly = 262,980; 66 x 1000-batch epoch =~ 1 full pass
    amp: False
    grad_accum_every: 1
    grad_max_norm: 1.0
    thread_workers: 4
    valid_thread_workers: 0
    stopping_patience: 50
    teacher_forcing_ratio: 0.5 #0.9886539666794065
    stop_rollout: 0.9
    skip_validation: True
    load_weights: False
    load_optimizer: False
    use_scheduler: False
    update_learning_rate: True
    #scheduler: {'scheduler_type': 'cosine-annealing', first_cycle_steps: 500, cycle_mult: 6.0, max_lr: 5.0e-04, min_lr: 5.0e-07, warmup_steps: 499, gamma: 0.7}
    # scheduler: {scheduler_type: plateau, mode: min, factor: 0.1, patience: 5, cooldown: 2, min_lr: 1e-6, epsilon: 1e-8, verbose: true, threshold: 1e-4}
    scheduler: {'scheduler_type': 'lambda'}
     
loss: 
   training_loss: "mse"
   use_vgg: False
   use_spectral_loss: False
   spectral_wavenum_init: 15
   spectral_lambda_reg: 0.025791372491084097
   use_latitude_weights: False
   use_variable_weights: False
   latitude_weights: False


predict:
    start: "2017-11-01"
    finish: "2017-11-03"
#    finish: "2022-09-30"
    autoregressive: False
    use_laplace_filter: False
    save_format: "nc"


#visualization:
#    surface_visualize: 
#        variable_keys: ['U10','U1000','U250','U500','U850','V10','V1000','V250','V500','V850']
#        variable_names: ['U10','U1000','U250','U500','U850','V10','V1000','V250','V500','V850']
#        file_name_prefix: "unet-03-wind"
#    save_options: {'dpi': 250,
#                   'format':'png'}
#    video_format: 'none'

#pbs: #derecho
#    conda: "holodec"
#    project: "NAML0001"
#    job_name: "fuxi"
#    walltime: "24:00:00"
#    nodes: 8
#    ncpus: 64
#    ngpus: 4
#    mem: '480GB'
#    queue: 'preempt'
    
pbs: # casper
    conda: "credit"
    job_name: 'loadtest'
    nodes: 1
    ncpus: 8
    ngpus: 1
    mem: '128GB'
    walltime: '4:00:00'
#    walltime: '24:00:00'
    gpu_type: 'v100'
#    cpu_type: 'milan'
    project: 'NRIS0001'
    queue: 'casper'
