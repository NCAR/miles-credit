# --------------------------------------------------------------------------------------------------------------------- #
# This yaml file configures an hourly state-in-state-out CrossFormer
# on NSF NCAR HPCs (casper.ucar.edu and derecho.hpc.ucar.edu) 
# The model is trained on hourly model-level ERA5 data with top solar irradiance, geopotential, and land-sea mask
# Output variables: model level [U, V, T, Q], single level [SP, t2m], and 500 hPa [U, V, T, Z, Q]
# --------------------------------------------------------------------------------------------------------------------- #
save_loc: '/glade/work/dkimpara/CREDIT_runs/post_test/'
seed: 1000

data:
    # upper-air variables
    variables: ['U','V','T','Q']
    save_loc: '/glade/derecho/scratch/wchapman/y_TOTAL*'
    
    # surface variables
    surface_variables: ['SP','t2m', 'V500','U500','T500','Z500','Q500']
    save_loc_surface: '/glade/derecho/scratch/wchapman/y_TOTAL*'
    
    # dynamic forcing variables
    dynamic_forcing_variables: [] #['tsi']
    save_loc_dynamic_forcing: '/glade/derecho/scratch/dgagne/credit_solar_1h_0.25deg/*.nc'
    
    # static variables
    static_variables: [] #['Z_GDS4_SFC','LSM'] 
    save_loc_static: '/glade/derecho/scratch/ksha/CREDIT_data/static_norm_old.nc'
    
    # mean / std path
    mean_path: '/glade/derecho/scratch/ksha/CREDIT_data/mean_1h_1979_2018_16lev_0.25deg.nc'
    # regular z-score version
    std_path: '/glade/derecho/scratch/ksha/CREDIT_data/std_1h_1979_2018_16lev_0.25deg.nc'
    # residual norm version
    # std_path: '/glade/derecho/scratch/ksha/CREDIT_data/std_residual_1h_1979_2018_16lev_0.25deg.nc'
    
    # train / validation split
    train_years: [1979, 2018]
    valid_years: [2018, 2019]
    
    scaler_type: 'std_new'
    
    history_len: 2
    valid_history_len: 2

    # single step
    forecast_len: 0
    valid_forecast_len: 0
    
    one_shot: True
    lead_time_periods: 1
    skip_periods: null
    
    # compatible with the old 'std'
    static_first: True
    
trainer:
    type: standard # <---------- change to your type

    mode: none
    cpu_offload: False
    activation_checkpoint: False
    
    load_weights: False
    load_optimizer: False
    load_scaler: False
    load_sheduler: False
    
    skip_validation: True
    update_learning_rate: False

    save_backup_weights: True
    save_best_weights: True
    
    learning_rate: 1.0e-03 # <-- change to your lr
    weight_decay: 0
    
    train_batch_size: 1
    valid_batch_size: 1
    
    batches_per_epoch: 1 # use 50% of full epoch; full epoch = 10681(batches) * 32(samples)
    valid_batches_per_epoch: 0
    stopping_patience: 999
    
    start_epoch: 0
    # num_epoch: 6 # optional
    reload_epoch: True
    epochs: &epochs 1
     
    use_scheduler: True
    scheduler: {'scheduler_type': 'cosine-annealing', 'T_max': *epochs,  'last_epoch': -1}
    
    amp: False
    grad_accum_every: 1
    grad_max_norm: 1.0
    
    # number of workers
    thread_workers: 4
    valid_thread_workers: 0
  
model:
    type: "unet"
    image_height: 640
    image_width: 1280
    frames: 2
    levels: 16
    rk4_integration: False
    architecture:
        name: "unet"
        encoder_name: "resnet34"
        encoder_weights: "imagenet"
    post_conf: 
        activate: True
        skebs:
            activate: True
        
        tracer_fixer:
            activate: True
            tracer_name_upper: ['specific_total_water',]
            tracer_name_surface: []
            tracer_name_diagnostics: ['specific_total_water_500', 'total_precipitation']
            
        global_mass_fixer:
            activate: True
            specific_total_water_name: ['specific_total_water']
            precipitation_name: ['total_precipitation']
            evaporation_name: ['evaporation']
            
        global_energy_fixer:
            activate: True
            air_temperature_name: ['T']
            specific_total_water_name: ['specific_total_water']
            surface_geopotential_name: ['z_norm']
            TOA_net_radiation_flux_name: ['top_net_solar_radiation', 'top_net_thermal_radiation']
            surface_net_radiation_flux_name: ['surface_net_solar_radiation', 'surface_net_thermal_radiation']
            surface_energy_flux_name: ['surface_sensible_heat_flux', 'surface_latent_heat_flux',]

loss: 
    # the main training loss
    training_loss: "mse"
    
    # power loss (x), spectral_loss (x)
    use_power_loss: False
    use_spectral_loss: False
    
    # use latitude weighting
    use_latitude_weights: True
    latitude_weights: "/glade/u/home/wchapman/MLWPS/DataLoader/LSM_static_variables_ERA5_zhght.nc"
    
    # turn-off variable weighting
    use_variable_weights: False
    
predict:
    forecasts:
        type: "custom"       # keep it as "custom"
        start_year: 2020     # year of the first initialization (where rollout will start)
        start_month: 1       # month of the first initialization
        start_day: 1         # day of the first initialization
        start_hours: [0, 12] # hour-of-day for each initialization, 0 for 00Z, 12 for 12Z
        duration: 30         # number of days to initialize, starting from the (year, mon, day) above
                             # duration should be divisible by the number of GPUs 
                             # (e.g., duration: 384 for 365-day rollout using 32 GPUs)
        days: 2              # forecast lead time as days (1 means 24-hour forecast)
        
    save_forecast: '/glade/derecho/scratch/ksha/CREDIT/wxformer_1h/'
    save_vars: ['SP','t2m','V500','U500','T500','Z500','Q500']
    
    # turn-off low-pass filter
    use_laplace_filter: False
    
    # deprecated
    # save_format: "nc"

# pbs: # casper
#     conda: "/glade/work/ksha/miniconda3/envs/credit"
#     job_name: 'unet'
#     nodes: 1
#     ncpus: 8
#     ngpus: 1
#     mem: '128GB'
#     walltime: '24:00:00'
#     gpu_type: 'a100'
#     project: 'NAML0001'
#     queue: 'casper'

pbs: #derecho
    conda: "credit-derecho"
    project: "NAML0001"
    job_name: "unet_skebs"
    walltime: "00:30:00"
    nodes: 1
    ncpus: 64
    ngpus: 4
    mem: '480GB'
    queue: 'main'
